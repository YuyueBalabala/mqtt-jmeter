<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.2.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="xmeter_runtime_vars" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="MQTT_broker_ip" elementType="Argument">
            <stringProp name="Argument.name">MQTT_broker_ip</stringProp>
            <stringProp name="Argument.value">10.42.3.130</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">EMQ X ip</stringProp>
          </elementProp>
          <elementProp name="MQTT_broker_port" elementType="Argument">
            <stringProp name="Argument.name">MQTT_broker_port</stringProp>
            <stringProp name="Argument.value">14567</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">EMQ X 端口号</stringProp>
          </elementProp>
          <elementProp name="qos" elementType="Argument">
            <stringProp name="Argument.name">qos</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="pub_tps" elementType="Argument">
            <stringProp name="Argument.name">pub_tps</stringProp>
            <stringProp name="Argument.value">30</stringProp>
            <stringProp name="Argument.desc">Pub线程组的吞吐量</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="payload_msg" elementType="Argument">
            <stringProp name="Argument.name">payload_msg</stringProp>
            <stringProp name="Argument.value">12345678</stringProp>
            <stringProp name="Argument.desc">payload_msg</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="mqtt_user" elementType="Argument">
            <stringProp name="Argument.name">mqtt_user</stringProp>
            <stringProp name="Argument.value">root</stringProp>
            <stringProp name="Argument.desc">mqtt连接认证用户</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="mqtt_password" elementType="Argument">
            <stringProp name="Argument.name">mqtt_password</stringProp>
            <stringProp name="Argument.value">root</stringProp>
            <stringProp name="Argument.desc">mqtt连接认证密码</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="connect_wait_time" elementType="Argument">
            <stringProp name="Argument.name">connect_wait_time</stringProp>
            <stringProp name="Argument.value">60000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Connect线程组连接保持时间,单位 ms</stringProp>
          </elementProp>
          <elementProp name="testrunId" elementType="Argument">
            <stringProp name="Argument.name">testrunId</stringProp>
            <stringProp name="Argument.value">testrunId</stringProp>
            <stringProp name="Argument.desc">testrunId</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="pub_topic" elementType="Argument">
            <stringProp name="Argument.name">pub_topic</stringProp>
            <stringProp name="Argument.value">test/pub_only_topic</stringProp>
            <stringProp name="Argument.desc">上传topic</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="wait_time" elementType="Argument">
            <stringProp name="Argument.name">wait_time</stringProp>
            <stringProp name="Argument.value">3000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">pub，sub前等待连接的时间</stringProp>
          </elementProp>
          <elementProp name="sub_sample_num" elementType="Argument">
            <stringProp name="Argument.name">sub_sample_num</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.desc">sub收到多少个响应采样一次</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Pub" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">5</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.delayedStart">true</boolProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="仅一次控制器" enabled="true"/>
        <hashTree>
          <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect - pub" enabled="true">
            <stringProp name="mqtt.server">${MQTT_broker_ip}</stringProp>
            <stringProp name="mqtt.port">${MQTT_broker_port}</stringProp>
            <stringProp name="mqtt.version">3.1.1</stringProp>
            <stringProp name="mqtt.conn_timeout">30</stringProp>
            <stringProp name="mqtt.protocol">QUIC</stringProp>
            <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
            <stringProp name="mqtt.keystore_file_path"></stringProp>
            <stringProp name="mqtt.keystore_password"></stringProp>
            <stringProp name="mqtt.clientcert_file_path"></stringProp>
            <stringProp name="mqtt.clientcert_password"></stringProp>
            <stringProp name="mqtt.user_name">${mqtt_user}</stringProp>
            <stringProp name="mqtt.password">${mqtt_password}</stringProp>
            <stringProp name="mqtt.client_id_prefix">${__threadNum}-${__groovy(&quot;${__machineName()}&quot;[18..-1],)}</stringProp>
            <boolProp name="mqtt.client_id_suffix">true</boolProp>
            <stringProp name="mqtt.conn_keep_alive">300</stringProp>
            <stringProp name="mqtt.conn_attampt_max">0</stringProp>
            <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
            <stringProp name="mqtt.conn_clean_session">true</stringProp>
            <stringProp name="mqtt.ws_path"></stringProp>
            <intProp name="mqtt.send.buff">64</intProp>
            <intProp name="mqtt.recv.buff">64</intProp>
          </net.xmeter.samplers.ConnectSampler>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Timer" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">${wait_time}</stringProp>
          </TestAction>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </LoopController>
        <hashTree>
          <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="MQTT Pub Sampler" enabled="true">
            <stringProp name="mqtt.topic_name">test-topic</stringProp>
            <stringProp name="mqtt.qos_level">${qos}</stringProp>
            <boolProp name="mqtt.add_timestamp">true</boolProp>
            <stringProp name="mqtt.message_type">String</stringProp>
            <stringProp name="mqtt.message_type_fixed_length">${payload_lenth}</stringProp>
            <stringProp name="mqtt.message_to_sent">${payload_msg}</stringProp>
            <boolProp name="mqtt.retained_message">true</boolProp>
          </net.xmeter.samplers.PubSampler>
          <hashTree>
            <ConstantThroughputTimer guiclass="TestBeanGUI" testclass="ConstantThroughputTimer" testname="timers_ pub" enabled="true">
              <stringProp name="throughput">${__xmeterThroughput(${pub_tps},SEC,)}</stringProp>
              <intProp name="calcMode">2</intProp>
            </ConstantThroughputTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Sub" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="仅一次控制器" enabled="true"/>
        <hashTree>
          <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect - sub" enabled="true">
            <stringProp name="mqtt.server">${MQTT_broker_ip}</stringProp>
            <stringProp name="mqtt.port">${MQTT_broker_port}</stringProp>
            <stringProp name="mqtt.version">3.1.1</stringProp>
            <stringProp name="mqtt.conn_timeout">30</stringProp>
            <stringProp name="mqtt.protocol">QUIC</stringProp>
            <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
            <stringProp name="mqtt.keystore_file_path"></stringProp>
            <stringProp name="mqtt.keystore_password"></stringProp>
            <stringProp name="mqtt.clientcert_file_path"></stringProp>
            <stringProp name="mqtt.clientcert_password"></stringProp>
            <stringProp name="mqtt.user_name">${mqtt_user}</stringProp>
            <stringProp name="mqtt.password">${mqtt_password}</stringProp>
            <stringProp name="mqtt.client_id_prefix">${__threadNum}-${__groovy(&quot;${__machineName()}&quot;[18..-1],)}</stringProp>
            <boolProp name="mqtt.client_id_suffix">true</boolProp>
            <stringProp name="mqtt.conn_keep_alive">60</stringProp>
            <stringProp name="mqtt.conn_attampt_max">0</stringProp>
            <stringProp name="mqtt.reconn_attampt_max">2</stringProp>
            <stringProp name="mqtt.conn_clean_session">true</stringProp>
            <stringProp name="mqtt.ws_path"></stringProp>
            <intProp name="mqtt.send.buff">64</intProp>
            <intProp name="mqtt.recv.buff">64</intProp>
          </net.xmeter.samplers.ConnectSampler>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Timer" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">${wait_time}</stringProp>
          </TestAction>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </LoopController>
        <hashTree>
          <net.xmeter.samplers.SubSampler guiclass="net.xmeter.gui.SubSamplerUI" testclass="net.xmeter.samplers.SubSampler" testname="MQTT Sub Sampler" enabled="true">
            <stringProp name="mqtt.topic_name">test-topic</stringProp>
            <stringProp name="mqtt.qos_level">${qos}</stringProp>
            <boolProp name="mqtt.add_timestamp">true</boolProp>
            <boolProp name="mqtt.debug_response">false</boolProp>
            <stringProp name="mqtt.sample_condition">number of received messages</stringProp>
            <stringProp name="mqtt.sample_condition_value">${sub_sample_num}</stringProp>
          </net.xmeter.samplers.SubSampler>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">/Users/yuyue/workspace/Emq_work/quick-plugin-dev/jmeter-quic.jtl</stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
